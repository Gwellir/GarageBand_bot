# Generated by Django 3.2.3 on 2021-08-17 16:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('convoapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BotUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Полное имя пользователя')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Имя в ТГ')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Фамилия в ТГ')),
                ('user_id', models.PositiveIntegerField(db_index=True, unique=True, verbose_name='ID в ТГ')),
                ('username', models.CharField(max_length=50, null=True, verbose_name='Ник в ТГ')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Указанное местоположение')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона')),
                ('last_active', models.DateTimeField(auto_now=True, verbose_name='Время последней активности')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('is_banned', models.BooleanField(db_index=True, default=False, verbose_name='В бане')),
                ('is_staff', models.BooleanField(db_index=True, default=False, verbose_name='Админ')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
        ),
        migrations.CreateModel(
            name='TGInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(db_index=True, max_length=50, verbose_name='Токен ТГ')),
                ('publish_id', models.BigIntegerField(verbose_name='Основной канал бота')),
                ('publish_name', models.CharField(max_length=100, verbose_name='Название канала')),
                ('admin_group_id', models.BigIntegerField(null=True, verbose_name='Группа администрирования')),
                ('discussion_group_id', models.BigIntegerField(null=True, verbose_name='Группа обсуждения')),
                ('feedback_group_id', models.BigIntegerField(null=True, verbose_name='Группа фидбека')),
            ],
        ),
        migrations.CreateModel(
            name='WorkRequestStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50, verbose_name='Наименование')),
                ('processor', models.CharField(max_length=50, null=True, verbose_name='Процессор обработки')),
                ('reply_pattern', models.TextField(verbose_name='Шаблон ответа')),
                ('buttons', models.JSONField(verbose_name='Набор кнопок')),
            ],
        ),
        migrations.CreateModel(
            name='WorkRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=70, verbose_name='Наименование задачи')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Подробное описание')),
                ('formed_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Время составления')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Местоположение для ремонта')),
                ('car_type', models.CharField(blank=True, max_length=50, verbose_name='Тип автомобиля')),
                ('is_complete', models.BooleanField(db_index=True, default=False, verbose_name='Флаг готовности заявки')),
                ('is_discarded', models.BooleanField(db_index=True, default=False, verbose_name='Флаг отказа от проведения заявки')),
                ('is_locked', models.BooleanField(db_index=True, default=False, verbose_name='Флаг полного завершения работы по заявке')),
                ('dialog', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bound_workrequest', to='convoapp.dialog')),
                ('stage', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tgbot.workrequeststage')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tgbot.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='tgbot.botuser')),
            ],
        ),
        migrations.CreateModel(
            name='RequestPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, null=True, verbose_name='Описание фото')),
                ('tg_file_id', models.CharField(max_length=255, verbose_name='ID файла в ТГ')),
                ('image', models.ImageField(upload_to='user_photos', verbose_name='Фотография')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='tgbot.workrequest')),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_message_id', models.PositiveIntegerField(db_index=True, null=True, verbose_name='Идентификатор сообщения в канале')),
                ('group_message_id', models.PositiveIntegerField(db_index=True, null=True, verbose_name='Идентификатор сообщения в группе')),
                ('feedback', models.TextField(max_length=4000, null=True, verbose_name='Отзыв пользователя')),
                ('bound', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='registered', to='tgbot.workrequest')),
            ],
        ),
        migrations.CreateModel(
            name='MessengerBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
                ('bound_app', models.CharField(default='tgbot', max_length=50, verbose_name='Приложение для обработки объекта')),
                ('bound_object', models.CharField(max_length=50, verbose_name='Рабочий объект')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Бот включён')),
                ('is_debug', models.BooleanField(db_index=True, default=True, verbose_name='Для дебага')),
                ('telegram_instance', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bot', to='tgbot.tginstance')),
            ],
        ),
    ]
