# Generated by Django 3.2.3 on 2021-10-11 17:15

from django.db import migrations
from django.db.models import F


class DelStage:

    def __init__(self, stage_id, model, stage_model):
        self.stage_id = stage_id
        self.app_name, self.model_name = model.split(".")
        self.stage_app_name, self.stage_model_name = stage_model.split(".")

    def __call__(self, apps, schema_editor):
        SurveyModel = apps.get_model(self.app_name, self.model_name)
        SurveyStageModel = apps.get_model(self.stage_app_name, self.stage_model_name)
        db_alias = schema_editor.connection.alias
        last_id = SurveyStageModel.objects.count()
        SurveyModel.objects.using(db_alias).filter(stage_id=self.stage_id).update(stage_id=F('stage_id') + 1)
        SurveyStageModel.objects.using(db_alias).filter(id=self.stage_id).delete()
        for ssm in SurveyStageModel.objects.using(db_alias).filter(id__gte=self.stage_id).order_by('id'):
            ssm.id -= 1
            ssm.save()
        SurveyStageModel.objects.using(db_alias).filter(id=last_id).delete()
        SurveyModel.objects.using(db_alias).filter(stage_id__gt=self.stage_id).update(stage_id=F('stage_id') - 1)


class AddStage:

    def __init__(self, stage_id, model, stage_model, name, processor):
        self.stage_id = stage_id
        self.name = name
        self.processor = processor
        self.app_name, self.model_name = model.split(".")
        self.stage_app_name, self.stage_model_name = stage_model.split(".")

    def __call__(self, apps, schema_editor):
        SurveyModel = apps.get_model(self.app_name, self.model_name)
        SurveyStageModel = apps.get_model(self.stage_app_name, self.stage_model_name)
        db_alias = schema_editor.connection.alias
        for ssm in SurveyStageModel.objects.using(db_alias).filter(id__gte=self.stage_id).order_by('-id'):
            ssm.id += 1
            ssm.save()
        SurveyStageModel.objects.using(db_alias).filter(id=self.stage_id).delete()
        SurveyStageModel.objects.using(db_alias).create(id=self.stage_id, name=self.name, processor=self.processor)
        SurveyModel.objects.using(db_alias).filter(stage_id__gte=self.stage_id).update(stage_id=F('stage_id') + 1)
        # Харьков
        SurveyModel.objects.using(db_alias).all().update(location_key_id=63)


class Migration(migrations.Migration):

    dependencies = [
        ('tgbot', '0008_auto_20211011_1952'),
    ]

    operations = [
        migrations.RunPython(
            AddStage(
                7,
                'tgbot.WorkRequest',
                'tgbot.WorkRequestStage',
                'get_location',
                'LocationInputProcessor',
            ),
            DelStage(
                7,
                'tgbot.WorkRequest',
                'tgbot.WorkRequestStage',
            )
        ),
        migrations.RunPython(
            AddStage(
                8,
                'tgbot.WorkRequest',
                'tgbot.WorkRequestStage',
                'confirm_location',
                'LocationConfirmationProcessor',
            ),
            DelStage(
                8,
                'tgbot.WorkRequest',
                'tgbot.WorkRequestStage',
            )
        ),
    ]
