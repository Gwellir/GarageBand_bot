import os

from pytest import mark
from telethon import TelegramClient
from telethon.tl.custom.message import Message
from time import sleep

BOT_ID = os.getenv("tested_bot_id")


@mark.asyncio
async def test_start(client: TelegramClient):
    async with client.conversation("@GarageBandTest_bot", timeout=5) as conv:
        await conv.send_message("/start")

        resp: Message = await conv.get_response()

        assert "–ø–æ–º–æ–≥–∞—é —Ä–∞–∑–º–µ—â–∞—Ç—å –∑–∞—è–≤–∫–∏" in resp.raw_text
        assert resp.button_count == 3
        assert resp.buttons[0][0].text == "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É"
        assert resp.buttons[1][0].text == "–ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫"
        assert resp.buttons[1][1].text == "–†–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É"

        await resp.click(text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É")
        answer = await conv.get_response()
        assert answer.button_count == 2
        assert "—Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É" in answer.raw_text
        assert answer.buttons[0][0].text == "–ù–∞—á–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
        assert answer.buttons[1][0].text == "–û—Ç–º–µ–Ω–∏—Ç—å"

        await answer.click(text="–ù–∞—á–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ")
        answer = await conv.get_response()
        assert answer.button_count == 1
        assert "–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞" in answer.raw_text
        assert answer.buttons[0][0].text == "–û—Ç–º–µ–Ω–∏—Ç—å"

        await conv.send_message("–í–ª–∞–¥–∏—Å–ª–∞–≤")
        answer = await conv.get_response()

        assert answer.button_count == 1
        assert "–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏" in answer.raw_text
        assert answer.buttons[0][0].text == "–û—Ç–º–µ–Ω–∏—Ç—å"

        await conv.send_message("–ê–≤—Ç–æ—Ç–µ—Å—Ç")
        answer = await conv.get_response()

        assert answer.button_count == 1
        assert "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ" in answer.raw_text
        assert answer.buttons[0][0].text == "–û—Ç–º–µ–Ω–∏—Ç—å"

        await conv.send_message("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")
        answer = await conv.get_response()

        assert answer.button_count == 2
        assert "–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏" in answer.raw_text
        assert answer.buttons[0][0].text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        assert answer.buttons[1][0].text == "–û—Ç–º–µ–Ω–∏—Ç—å"

        await answer.click(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
        answer = await conv.get_response()

        assert answer.button_count == 1
        assert "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ, —Ä–∞–π–æ–Ω–µ" in answer.raw_text
        assert answer.buttons[0][0].text == "–û—Ç–º–µ–Ω–∏—Ç—å"

        await conv.send_message("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")
        answer = await conv.get_response()

        assert answer.button_count == 1
        assert "–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" in answer.raw_text
        assert answer.buttons[0][0].text == "–û—Ç–º–µ–Ω–∏—Ç—å"

        await conv.send_message("+38 097 000 00 00")
        answer1 = await conv.get_response()
        assert answer1.button_count == 0
        assert "–í—ã –º–æ–ª–æ–¥–µ—Ü!" in answer1.raw_text

        answer2 = await conv.get_response()
        assert answer2.button_count == 3
        assert "–ê–≤—Ç–æ—Ç–µ—Å—Ç" in answer2.raw_text
        assert "üõ†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞" in answer2.raw_text
        assert "üìç –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥" in answer2.raw_text
        assert "üñã @Valion - –í–ª–∞–¥–∏—Å–ª–∞–≤" in answer2.raw_text
        assert "üìû +380970000000" in answer2.raw_text
        assert answer2.buttons[0][0].text == "‚úÖ –ü—É–±–ª–∏–∫—É–µ–º"
        assert answer2.buttons[0][1].text == "‚ùå –ó–∞–Ω–æ–≤–æ"
        assert answer2.buttons[1][0].text == "–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –£–∫—Ä–∞–∏–Ω–∞"

        await answer2.buttons[0][0].click()
        answer = await conv.get_response()

        assert answer.button_count == 0
        assert "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ!" in answer.raw_text
